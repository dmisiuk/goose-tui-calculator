name: Generate VHS Demos

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - ".tapes/**"
      - "cmd/**"
      - "internal/**"
      - "go.mod"
      - "go.sum"
  workflow_dispatch:

jobs:
  find-tapes:
    runs-on: ubuntu-latest
    outputs:
      tapes: ${{ steps.find.outputs.tapes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed/new tape files
        id: find
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Get changed and new .tape files in PR
            tapes=$(git diff --name-only --diff-filter=AM origin/${{ github.base_ref }}...HEAD | grep '\.tape$' | grep -v '/assets/' || echo "")
          else
            # For workflow_dispatch, get all tape files
            tapes=$(find .tapes -name "*.tape" -not -path "*/assets/*" -type f)
          fi

          if [ -z "$tapes" ]; then
            echo "tapes=[]" >> $GITHUB_OUTPUT
            echo "No changed/new tape files found"
          else
            # Format as JSON array
            tapes_json=$(echo "$tapes" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "tapes=$tapes_json" >> $GITHUB_OUTPUT
            echo "Found tapes: $tapes_json"
          fi

  generate-demos:
    needs: find-tapes
    if: needs.find-tapes.outputs.tapes != '[]'
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        tape: ${{ fromJson(needs.find-tapes.outputs.tapes) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Build calculator
        run: go build -o calc ./cmd/calculator

      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Generate demo with VHS
        uses: charmbracelet/vhs-action@v2
        with:
          path: ${{ matrix.tape }}

      - name: Upload demo
        uses: actions/upload-artifact@v4
        with:
          name: demo-${{ hashFiles(matrix.tape) }}
          path: .tapes/assets/*.gif
          retention-days: 30

  comment-pr:
    needs: [find-tapes, generate-demos]
    if: github.event_name == 'pull_request' && needs.find-tapes.outputs.tapes != '[]'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: demos
          pattern: demo-*
          merge-multiple: true

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let files = [];
            if (fs.existsSync('demos')) {
              files = fs.readdirSync('demos')
                .filter(f => f.endsWith('.gif'))
                .map(f => `- ${f}`);
            }

            const body = `## 🎬 VHS Demo Generation

            Generated ${files.length} demo(s) from changed/new tape files:
            ${files.join('\n') || '- None'}

            📁 Demo files are available in the [workflow artifacts](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
