name: Generate VHS Demos

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - .tapes/**
      - cmd/**
      - internal/**
      - go.mod
      - go.sum
  workflow_dispatch:

jobs:
  find-tapes:
    runs-on: ubuntu-latest
    outputs:
      tapes: ${{ steps.find.outputs.tapes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed/new tape files
        id: find
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Get changed and new .tape files in PR
            tapes=$(git diff --name-only --diff-filter=AM origin/${{ github.base_ref }}...HEAD | grep '\.tape$' | grep -v '/assets/' || echo "")
          else
            # For workflow_dispatch, get all tape files
            tapes=$(find .tapes -name "*.tape" -not -path "*/assets/*" -type f)
          fi

          if [ -z "$tapes" ]; then
            echo "tapes=[]" >> $GITHUB_OUTPUT
            echo "No changed/new tape files found"
          else
            # Format as JSON array
            tapes_json=$(echo "$tapes" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "tapes=$tapes_json" >> $GITHUB_OUTPUT
            echo "Found tapes: $tapes_json"
          fi

  generate-demos:
    needs: find-tapes
    if: needs.find-tapes.outputs.tapes != '[]'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        tape: ${{ fromJson(needs.find-tapes.outputs.tapes) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build calculator
        run: go build -o calc ./cmd/calculator

      - name: Generate demo with VHS
        uses: charmbracelet/vhs-action@v2.1.0
        with:
          path: ${{ matrix.tape }}

      - name: Commit generated GIF
        uses: stefanzweifel/git-auto-commit-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit_message: "Update VHS demo for ${{ matrix.tape }}"
          file_pattern: ".tapes/assets/*.gif"
          commit_user_name: vhs-action ðŸ“¼
          commit_user_email: actions@github.com
          commit_author: vhs-action ðŸ“¼ <actions@github.com>

  comment-pr:
    needs: [find-tapes, generate-demos]
    if: github.event_name == 'pull_request' && needs.find-tapes.outputs.tapes != '[]'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const tapes = ${{ needs.find-tapes.outputs.tapes }};

            if (!tapes || tapes.length === 0) {
              console.log('No tape files found');
              return;
            }

            // Convert tape paths to GIF filenames
            const gifs = tapes.map(tape => {
              const name = tape.replace('.tapes/', '').replace('.tape', '.gif');
              return name;
            });

            let body = `## ðŸŽ¬ VHS Demo Generation\n\n`;
            body += `Generated ${gifs.length} demo(s):\n\n`;

            gifs.forEach(gif => {
              const url = `https://raw.githubusercontent.com/${{ github.repository }}/${{ github.head_ref }}/.tapes/assets/${gif}`;
              body += `### ${gif}\n`;
              body += `![${gif}](${url})\n\n`;
            });

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
