name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, labeled, review_requested]
  issue_comment:
    types: [created]

jobs:
  check_permissions:
    runs-on: ubuntu-latest
    outputs:
      is_authorized: ${{ steps.check.outputs.is_authorized }}
    steps:
      - name: Check user permissions
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const { data: { permission } } = await github.rest.repos.getCollaboratorPermissionLevel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: context.actor
              });
              if (['admin', 'write'].includes(permission)) {
                core.setOutput('is_authorized', 'true');
              } else {
                core.setOutput('is_authorized', 'false');
              }
            } catch (error) {
              // If actor is a bot or not found, deny authorization
              console.log(`Permission check failed for ${context.actor}: ${error.message}`);
              core.setOutput('is_authorized', 'false');
            }

  claude-review:
    name: "Claude Code Assistant"
    needs: check_permissions
    if: |
      needs.check_permissions.outputs.is_authorized == 'true' &&
      (
        (github.event_name == 'issue_comment' &&
         github.event.issue.pull_request &&
         contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request' &&
         (contains(github.event.pull_request.body, '@claude') ||
          (github.event.action == 'labeled' && github.event.label.name == 'claude') ||
          contains(toJSON(github.event.pull_request.requested_reviewers.*.login), 'claude')))
      )

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@v1
        env:
          ANTHROPIC_BASE_URL: https://api.z.ai/api/anthropic
        with:
          anthropic_api_key: ${{ secrets.ZAI_API_KEY }}
          prompt: |
            REPO: ${{ github.repository }}
            PR NUMBER: ${{ github.event.pull_request.number }}

            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Be constructive and helpful in your feedback, following general best practices for code style and conventions.

            Use `gh pr comment` with your Bash tool to leave your review as a comment on the PR.

          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.claude.com/en/docs/claude-code/sdk#command-line for available options
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'
