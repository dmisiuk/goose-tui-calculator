name: Tests

on:
  push:
    branches: [ main, claude/* ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.0'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run unit tests
      run: go test -v -short ./...

    - name: Run calculator unit tests specifically
      run: go test -v ./internal/calculator -run TestCalculator

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: |
          testdata/
        retention-days: 7

  integration-tests:
    name: VHS Integration Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.0'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Install VHS
      run: |
        curl -fsSL https://github.com/charmbracelet/vhs/releases/latest/download/vhs_0.7.0_Linux_x86_64.tar.gz | sudo tar -C /usr/local/bin -xz vhs
        vhs version

    - name: Set up environment variables for colors
      run: |
        echo "CLICOLOR_FORCE=1" >> $GITHUB_ENV
        echo "FORCE_COLOR=1" >> $GITHUB_ENV
        echo "TERM=xterm-256color" >> $GITHUB_ENV

    - name: Run VHS integration tests
      env:
        CLICOLOR_FORCE: 1
        FORCE_COLOR: 1
        TERM: xterm-256color
      run: go test -v -run TestVHS ./...

    - name: Generate demo GIFs
      env:
        CLICOLOR_FORCE: 1
        FORCE_COLOR: 1
        TERM: xterm-256color
      run: |
        mkdir -p .tapes/assets
        mkdir -p .tapes/golden
        vhs .tapes/calculator-basic.tape

    - name: Upload VHS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vhs-demos
        path: |
          .tapes/assets/
          .tapes/golden/
        retention-days: 7

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results
        path: |
          .tapes/golden/
        retention-days: 7

  validate-tests:
    name: Validate Test Framework
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.0'

    - name: Download dependencies
      run: go mod download

    - name: Validate test framework setup
      run: |
        echo "Validating test framework components..."

        # Check if test files exist
        test_files=(
          "internal/calculator/calculator_golden_test.go"
          "vhs_test.go"
          "internal/testutil/validation.go"
        )

        for file in "${test_files[@]}"; do
          if [[ -f "$file" ]]; then
            echo "‚úÖ $file exists"
          else
            echo "‚ùå $file missing"
            exit 1
          fi
        done

        # Check if directories exist
        test_dirs=(
          "testdata"
          ".tapes/golden"
          "internal/testutil"
        )

        for dir in "${test_dirs[@]}"; do
          if [[ -d "$dir" ]]; then
            echo "‚úÖ $dir exists"
          else
            echo "‚ùå $dir missing"
            exit 1
          fi
        done

        # Check if VHS tape is configured for dual output
        if grep -q "Output .tapes/golden/calculator-basic.txt" .tapes/calculator-basic.tape; then
          echo "‚úÖ VHS tape configured for dual output"
        else
          echo "‚ùå VHS tape not configured for dual output"
          exit 1
        fi

        # Check if go.mod has testing dependencies
        if grep -q "github.com/charmbracelet/x/exp/teatest" go.mod; then
          echo "‚úÖ teatest dependency added"
        else
          echo "‚ùå teatest dependency missing"
          exit 1
        fi

        if grep -q "github.com/charmbracelet/x/exp/golden" go.mod; then
          echo "‚úÖ golden dependency added"
        else
          echo "‚ùå golden dependency missing"
          exit 1
        fi

        if grep -q "github.com/stretchr/testify" go.mod; then
          echo "‚úÖ testify dependency added"
        else
          echo "‚ùå testify dependency missing"
          exit 1
        fi

        echo "üéâ Test framework validation complete!"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.0'

    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: '-no-fail -fmt sarif -out results.sarif ./...'

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif