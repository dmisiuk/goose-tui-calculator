# This file provides integration with the existing test-and-verify.yml workflow
# Add these steps to your existing workflow to enable VHS demo generation

# --- ADD TO YOUR EXISTING .github/workflows/test-and-verify.yml ---

# 1. Add VHS setup after Go setup:
#     - name: Setup VHS
#       run: |
#         curl -L https://github.com/charmbracelet/vhs/releases/latest/download/vhs_0.7.1_linux_amd64.tar.gz | tar xz
#         sudo mv vhs /usr/local/bin/
#         vhs version

# 2. Add demo generation after tests:
#     - name: Generate VHS Demos
#       if: github.event_name == 'pull_request'
#       run: |
#         # Create demo generation script
#         cat > scripts/generate-demos.sh << 'EOF'
#         #!/bin/bash
#         set -e
#
#         MODE="${1:-changed}"
#         BASE_BRANCH="${2:-main}"
#
#         echo "🎬 VHS Demo Generation"
#         echo "Mode: $MODE"
#
#         mkdir -p .tapes/assets
#
#         generate_demo() {
#             local tape_file="$1"
#             local tape_name=$(basename "$tape_file" .tape)
#             local output_file=".tapes/assets/${tape_name}.gif"
#
#             echo "Generating: $tape_name"
#             if vhs "$tape_file"; then
#                 if [ -f "$output_file" ]; then
#                     local file_size=$(stat -c%s "$output_file" 2>/dev/null || echo "0")
#                     echo "✅ Success: $tape_name (${file_size} bytes)"
#                     return 0
#                 else
#                     echo "❌ Failed: $tape_name (no output)"
#                     return 1
#                 fi
#             else
#                 echo "❌ Failed: $tape_name (VHS error)"
#                 return 1
#             fi
#         }
#
#         get_changed_tapes() {
#             git diff --name-only origin/$BASE_BRANCH...HEAD | grep '\.tape$' || true
#         }
#
#         changed_files=$(get_changed_tapes)
#         if [ -z "$changed_files" ]; then
#             echo "No changed tapes, running basic demo..."
#             generate_demo ".tapes/calculator-basic.tape"
#         else
#             echo "$changed_files" | while read -r tape_file; do
#                 if [ -f "$tape_file" ]; then
#                     generate_demo "$tape_file"
#                 fi
#             done
#         fi
#         EOF
#         chmod +x scripts/generate-demos.sh
#
#         # Generate demos
#         mkdir -p scripts
#         ./scripts/generate-demos.sh changed main
#
#     - name: Upload demo artifacts
#       if: github.event_name == 'pull_request'
#       uses: actions/upload-artifact@v3
#       with:
#         name: vhs-demos-${{ github.event.number }}
#         path: .tapes/assets/
#         retention-days: 30

# 3. Optional: Add PR comment generation:
#     - name: Generate PR Demo Comment
#       if: github.event_name == 'pull_request'
#       run: |
#         if [ -d ".tapes/assets" ] && [ "$(ls -A .tapes/assets)" ]; then
#           echo "## 🎬 Generated VHS Demos" > pr-comment.md
#           echo "" >> pr-comment.md
#           echo "The following demos were generated for this PR:" >> pr-comment.md
#           echo "" >> pr-comment.md
#
#           for demo in .tapes/assets/*.gif; do
#             if [ -f "$demo" ]; then
#               demo_name=$(basename "$demo" .gif)
#               file_size=$(stat -c%s "$demo" 2>/dev/null || echo "0")
#               echo "- **$demo_name** (${file_size} bytes)" >> pr-comment.md
#             fi
#           done
#
#           echo "" >> pr-comment.md
#           echo "📁 [Download demos from workflow artifacts](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> pr-comment.md
#
#           gh pr comment ${{ github.event.number }} --body-file pr-comment.md
#         fi
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}